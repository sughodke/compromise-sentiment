{"version":3,"file":"compromise-sentences.js","sources":["../src/tags.js","../src/tagger.js","../src/misc/append.js","../src/parse/mainClause.js","../src/parse/index.js","../src/misc/json.js","../src/misc/negative.js","../src/questions/isQuestion.js","../src/questions/index.js","../src/tense/index.js","../src/phrases/index.js","../src/index.js"],"sourcesContent":["module.exports = {\n  // Phrase: {},\n  NounPhrase: {\n    // isA: 'Phrase',\n    notA: ['VerbPhrase', 'AdjectivePhrase'],\n    color: 'blue',\n  },\n  VerbPhrase: {\n    // isA: 'Phrase',\n    notA: ['AdjectivePhrase', 'NounPhrase'],\n    color: 'green',\n  },\n  AdjectivePhrase: {\n    // isA: 'Phrase',\n    notA: ['VerbPhrase', 'NounPhrase'],\n    color: 'magenta',\n  },\n  Subordinate: {\n    // isA: 'Phrase',\n    notA: [],\n    // color: '',\n  },\n}\n","const tagger = function (doc) {\n  doc.match('#Noun').tag('NounPhrase')\n  doc.match('#Verb').tag('VerbPhrase')\n\n  // NounPhrase\n  doc.match('(this|that|those|these)').tag('NounPhrase')\n  doc.match('#Adjective+ #NounPhrase').tagSafe('NounPhrase')\n  doc.match('#NounPhrase #Adjective+').tagSafe('NounPhrase')\n  // numbers\n  doc.match('#Value #NounPhrase').tag('NounPhrase')\n  // (determiners)\n  doc.match('#Determiner #NounPhrase').tag('NounPhrase')\n  doc.match('#Determiner #Adverb+? #Adjective+ #NounPhrase').tag('NounPhrase')\n  doc.match('(many|most|all|one|some|plenty) of #NounPhrase').tag('NounPhrase')\n  doc.match('such a #NounPhrase').tag('NounPhrase')\n\n  // VerbPhrase\n  doc.match('#VerbPhrase #Adverb+').tagSafe('VerbPhrase')\n  doc.match('#Adverb+ #VerbPhrase').tagSafe('VerbPhrase')\n  doc.match('#Auxiliary+ #VerbPhrase').tagSafe('VerbPhrase')\n  doc.match('#VerbPhrase no').tagSafe('VerbPhrase')\n  doc.match('not #VerbPhrase').tagSafe('VerbPhrase')\n\n  // claiming that\n  doc.match('#VerbPhrase [that]', 0).unTag('NounPhrase')\n  // (conjunctions)\n  doc.match('#VerbPhrase #Conjunction #VerbPhrase').tagSafe('VerbPhrase')\n\n  // nouns\n  doc.match('(who|what|which)').tag('NounPhrase')\n\n  // Adjective\n  doc.match('#Adverb+ #Adjective').tagSafe('AdjectivePhrase')\n  doc.match('#Adjective').tagSafe('AdjectivePhrase')\n\n  // missing\n  doc.match('#Value').tagSafe('NounPhrase')\n  doc.match('#Date').tagSafe('NounPhrase')\n  doc.match('#Date at #Date').tagSafe('NounPhrase')\n}\nmodule.exports = tagger\n","/** add a word to the start of this sentence */\nexports.prepend = function (str) {\n  this.forEach((doc) => {\n    // repair the titlecase\n    let firstTerms = doc.match('^.')\n    firstTerms.not('#ProperNoun').toLowerCase()\n    // actually add the word\n    firstTerms._prepend(str)\n    // add a titlecase\n    firstTerms.terms(0).toTitleCase()\n  })\n  return this\n}\n\n/** add a word to the end of this sentence */\nexports.append = function (str) {\n  let hasEnd = /[.?!]\\s*$/.test(str)\n  this.forEach((doc) => {\n    let end = doc.match('.$')\n    let lastTerm = end.termList(0)\n    let punct = lastTerm.post\n    if (hasEnd === true) {\n      punct = ''\n    }\n    // add punctuation to the end\n    end._append(str + punct)\n    // remove punctuation from the former last-term\n    lastTerm.post = ' '\n  })\n  return this\n}\n","// if a clause starts with these, it's not a main clause\nconst subordinate = `(after|although|as|because|before|if|since|than|that|though|when|whenever|where|whereas|wherever|whether|while|why|unless|until|once)`\nconst relative = `(that|which|whichever|who|whoever|whom|whose|whomever)`\n\n//try to remove secondary clauses\nconst mainClause = function(og) {\n  let m = og.clone(true)\n  if (m.length === 1) {\n    return m\n  }\n  // if there's no verb?\n  m = m.if('#Verb')\n  if (m.length === 1) {\n    return m\n  }\n  // this is a signal for subordinate-clauses\n  m = m.ifNo(subordinate)\n  m = m.ifNo('^even (if|though)')\n  m = m.ifNo('^so that')\n  m = m.ifNo('^rather than')\n  m = m.ifNo('^provided that')\n  if (m.length === 1) {\n    return m\n  }\n  // relative clauses\n  m = m.ifNo(relative)\n  if (m.length === 1) {\n    return m\n  }\n\n  m = m.ifNo('(despite|during|before|through|throughout)')\n  if (m.length === 1) {\n    return m\n  }\n  // did we go too far?\n  if (m.length === 0) {\n    m = og\n  }\n  // choose the first one?\n  return m.eq(0)\n}\nmodule.exports = mainClause\n","const mainClause = require('./mainClause')\n\nconst parse = function(doc) {\n  let clauses = doc.clauses()\n  let main = mainClause(clauses)\n  let nouns = main.match('#Determiner? (#Noun|#Adjective)+').if('#Noun')\n  let verb = main.verbs().eq(0)\n  // match('(do|will)? not? #Verb+ not?').eq(0)\n  return {\n    subject: nouns.eq(0),\n    verb: verb,\n    object: verb.lookAhead('.*'),\n  }\n}\nmodule.exports = parse\n","const parse = require('../parse')\n\n/** overload the original json with noun information */\nexports.json = function (options) {\n  let n = null\n  if (typeof options === 'number') {\n    n = options\n    options = null\n  }\n  options = options || { text: true, normal: true, trim: true, terms: true }\n  let res = []\n  this.forEach((doc) => {\n    let json = doc._json(options)[0]\n    let obj = parse(doc)\n    json.subject = obj.subject.json(options)[0]\n    json.verb = obj.verb.json(options)[0]\n    json.object = obj.object.json(options)[0]\n    res.push(json)\n  })\n  if (n !== null) {\n    return res[n]\n  }\n  return res\n}\n","const parse = require('../parse')\n\n/** he walks -> he did not walk */\nexports.toNegative = function() {\n  this.forEach(doc => {\n    let obj = parse(doc)\n    let vb = obj.verb.clone()\n    vb = vb.verbs().toNegative()\n    obj.verb.replaceWith(vb, false)\n  })\n  return this\n}\n/** he doesn't walk -> he walks */\nexports.toPositive = function() {\n  this.forEach(doc => {\n    let obj = parse(doc)\n    let vb = obj.verb.clone()\n    vb = vb.verbs().toPositive()\n    obj.verb.replaceWith(vb, false)\n  })\n  return this\n}\n","//is this sentence asking a question?\nconst isQuestion = function (doc) {\n  let endPunct = doc.post()\n  let clauses = doc.clauses()\n\n  if (/\\?/.test(endPunct) === true) {\n    return true\n  }\n\n  // Has ellipsis at the end means it's probably not a question\n  // e.g., Is this just fantasy...\n  if (/\\.\\.$/.test(doc.out('text'))) {\n    return false\n  }\n\n  // Starts with question word, but has a comma, so probably not a question\n  // e.g., Why are we caught in a land slide, no escape from reality\n  if (doc.has('^#QuestionWord') && doc.has('#Comma')) {\n    return false\n  }\n\n  // Starts with a #QuestionWord\n  // e.g., What open your eyes look up to the skies and see\n  if (doc.has('^#QuestionWord')) {\n    return true\n  }\n\n  // Second word is a #QuestionWord\n  // e.g., I'm what a poor boy\n  // case ts.has('^\\w+\\s#QuestionWord'):\n  // return true;\n\n  // is it, do you - start of sentence\n  // e.g., Do I need no sympathy\n  if (doc.has('^(do|does|did|is|was|can|could|will|would|may) #Noun')) {\n    return true\n  }\n\n  // these are a little more loose..\n  // e.g., Must I be come easy come easy go\n  if (doc.has('^(have|must) you')) {\n    return true\n  }\n\n  // Clause starts with a question word\n  // e.g., Anyway the wind blows, what doesn't really matter to me\n  if (clauses.has('^#QuestionWord')) {\n    return true\n  }\n\n  //is wayne gretskzy alive\n  if (clauses.has('(do|does|is|was) #Noun+ #Adverb? (#Adjective|#Infinitive)$')) {\n    return true\n  }\n\n  // Probably not a question\n  return false\n}\nmodule.exports = isQuestion\n","const isQuestion = require('./isQuestion')\n\n/** return sentences ending with '?' */\nexports.isQuestion = function () {\n  return this.filter((d) => isQuestion(d))\n}\n/** return sentences ending with '!' */\nexports.isExclamation = function () {\n  return this.filter((doc) => {\n    let term = doc.lastTerm().termList(0)\n    return term.hasPost('!')\n  })\n}\n/** return sentences with neither a question or an exclamation */\nexports.isStatement = function () {\n  return this.filter((doc) => {\n    let term = doc.lastTerm().termList(0)\n    return !term.hasPost('?') && !term.hasPost('!')\n  })\n}\n\n/** 'he is.' -> 'he is!' */\nexports.toExclamation = function () {\n  this.post('!')\n  return this\n}\n/** 'he is.' -> 'he is?' */\nexports.toQuestion = function () {\n  this.post('?')\n  return this\n}\n/** 'he is?' -> 'he is.' */\nexports.toStatement = function () {\n  this.post('.')\n  return this\n}\n","const parse = require('../parse')\n\n// 'i could drive' -> 'i could have driven'\nconst useParticiple = function (vb) {\n  if (vb.has('(could|should|would|may|can|must)')) {\n    return true\n  }\n  return false\n}\n\n/** he walks -> he walked */\nexports.toPastTense = function () {\n  this.forEach((doc) => {\n    if (doc.has('#PastTense')) {\n      return\n    }\n    let obj = parse(doc)\n    let vb = obj.verb.clone()\n    // support 'he could drive' -> 'he could have driven'\n    if (useParticiple(vb)) {\n      vb = vb.verbs().toParticiple()\n      obj.verb.replaceWith(vb, false)\n    } else {\n      //   //do a normal conjugation\n      vb = vb.verbs().toPastTense()\n      obj.verb.replaceWith(vb, false)\n    }\n    // // trailing gerund/future/present are okay, but 'walked and eats' is not\n    if (obj.object && obj.object.found && obj.object.has('#PresentTense')) {\n      let verbs = obj.object.verbs()\n      verbs.if('#PresentTense').verbs().toPastTense()\n    }\n  })\n  return this\n}\n\n/** he drives -> he has driven */\nexports.toParticiple = function () {\n  this.forEach((doc) => {\n    if (doc.has('has #Participle')) {\n      return\n    }\n    let obj = parse(doc)\n    let vb = obj.verb.clone()\n    vb = vb.verbs().toParticiple()\n    obj.verb.replaceWith(vb, false)\n    // trailing gerund/future/present are okay, but 'walked and eats' is not\n    if (obj.object && obj.object.found && obj.object.has('#PresentTense')) {\n      let verbs = obj.object.verbs()\n      verbs.if('#PresentTense').verbs().toParticiple()\n    }\n  })\n  return this\n}\n\n/** he walked -> he walks */\nexports.toPresentTense = function () {\n  this.forEach((doc) => {\n    let obj = parse(doc)\n    let isPlural = obj.verb.lookBehind('(i|we) (#Adverb|#Verb)?$').found\n    let vb = obj.verb.clone()\n    // 'i look', not 'i looks'\n    if (isPlural) {\n      //quick hack for copula verb - be/am\n      if (vb.has('(is|was|am|be)')) {\n        vb = vb.replace('will? (is|was|am|be)', 'am')\n      } else {\n        vb = vb.verbs().toInfinitive()\n      }\n    } else {\n      //'he looks'\n      vb = vb.verbs().toPresentTense()\n    }\n    obj.verb.replaceWith(vb, false)\n\n    // future is okay, but 'walks and ate' -> 'walks and eats'\n    if (obj.object && obj.object.found && obj.object.has('#PastTense')) {\n      let verbs = obj.object.verbs()\n      verbs.if('#PastTense').verbs().toPresentTense()\n    }\n  })\n  return this\n}\n\n/**he walked -> he will walk */\nexports.toFutureTense = function () {\n  this.forEach((doc) => {\n    let obj = parse(doc)\n    let vb = obj.verb.clone()\n    vb = vb.verbs().toFutureTense()\n    obj.verb.replaceWith(vb, false)\n    //Present is okay, but 'will walk and ate' -> 'will walk and eat'\n    if (obj.object && obj.object.found && obj.object.has('(#PastTense|#PresentTense)')) {\n      let verbs = obj.object.verbs()\n      verbs.if('(#PastTense|#PresentTense)').verbs().toInfinitive()\n    }\n  })\n  return this\n}\n\n/** the main noun of the sentence */\nexports.subjects = function () {\n  return this.map((doc) => {\n    let res = parse(doc)\n    return res.subject\n  })\n}\n\n/** return sentences that are in passive-voice */\nexports.isPassive = function () {\n  return this.if('was #Adverb? #PastTense #Adverb? by') //haha\n}\n","exports.phrases = function () {\n  let arr = []\n  this.forEach((s) => {\n    s = s.splitOn('#VerbPhrase+')\n    s = s.splitOn('#NounPhrase+')\n    s = s.splitOn('#AdjectivePhrase+')\n    arr = arr.concat(s.list)\n  })\n  return this.buildFrom(arr)\n}\n","const tags = require('./tags')\nconst tagger = require('./tagger')\n\nconst methods = Object.assign(\n  {},\n  require('./misc/append'),\n  require('./misc/json'),\n  require('./misc/negative'),\n  require('./questions'),\n  require('./tense'),\n  require('./phrases')\n)\n\nconst plugin = function (Doc, world) {\n  // our new tags\n  world.addTags(tags)\n  // run our tagger\n  world.postProcess(tagger)\n  /**  */\n  class Sentences extends Doc {\n    constructor(list, from, w) {\n      list = list.map((p) => p.clone(true))\n      super(list, from, w)\n    }\n  }\n  // add some aliases\n  methods.questions = methods.isQuestion\n  methods.exclamations = methods.isExclamation\n  methods.statements = methods.isStatement\n  // keep backups of these methods\n  methods._prepend = Sentences.prototype.prepend\n  methods._append = Sentences.prototype.append\n  methods._json = Sentences.prototype.json\n  Object.assign(Sentences.prototype, methods)\n\n  /** create a new Sentences object */\n  Sentences.prototype.buildFrom = function (list) {\n    list = list.map((p) => p.clone(true))\n    let doc = new Sentences(list, this, this.world)\n    return doc\n  }\n  /** create a new Doc object */\n  Sentences.prototype.toDoc = function () {\n    return Doc.prototype.buildFrom(this.list)\n  }\n\n  /** overload original sentences() method and return Sentence class**/\n  Doc.prototype.sentences = function (n) {\n    let arr = []\n    this.list.forEach((p) => {\n      arr.push(p.fullSentence())\n    })\n    let s = new Sentences(arr, this, this.world)\n    if (typeof n === 'number') {\n      s = s.get(n)\n    }\n    return s\n  }\n  return Doc\n}\nmodule.exports = plugin\n"],"names":["NounPhrase","notA","color","VerbPhrase","AdjectivePhrase","Subordinate","tagger","doc","match","tag","tagSafe","unTag","str","forEach","firstTerms","not","toLowerCase","_prepend","terms","toTitleCase","hasEnd","test","end","lastTerm","termList","punct","post","_append","subordinate","relative","mainClause","og","m","clone","length","ifNo","eq","parse","clauses","main","nouns","verb","verbs","subject","object","lookAhead","options","n","text","normal","trim","res","json","_json","obj","push","vb","toNegative","replaceWith","toPositive","isQuestion","endPunct","out","has","filter","d","term","hasPost","useParticiple","toParticiple","toPastTense","found","isPlural","lookBehind","replace","toInfinitive","toPresentTense","toFutureTense","map","arr","s","splitOn","concat","list","buildFrom","methods","Object","assign","require$$0","require$$1","require$$2","require$$3","require$$4","require$$5","plugin","Doc","world","addTags","tags","postProcess","Sentences","from","w","p","questions","exclamations","isExclamation","statements","isStatement","prototype","prepend","append","toDoc","sentences","fullSentence","get"],"mappings":"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"}